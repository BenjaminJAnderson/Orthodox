include <./includes.scad>
//skin() // I suck at math and can't translate [rounded_square] might not display
center = [
  ["esc",      "1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , "0"  , ""   , "delete"],
  ["tab",      "Q" , "W" , "E" , "R" , "T" , "Y" , "U" , "I" , "O" , "P"  , "backspace"    ],
  ["capslock", "A" , "S" , "D" , "F" , "G" , "H" , "J" , "K" , "L" , ""   , ""   , "enter" ],
  ["shift",    ""  , "Z" , "X" , "C" , "V" , "B" , "N" , "M" , ""  , ""   , "↑"            ],
  [            ""  , ""                                                                    ],
  ["ctrl",     "⊞" , "lt", ""                                , ""  , "←"  , "↓"  , "→"     ],
];

bottom_left = [
  ["",         "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12"   ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""   , ""             ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "["  , "]"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "," , "."  , ""             ],
  [            ""  , ""                                                                    ],
  ["",         ""  , ""  , ""                                , "'" , ""   , ""   , ""      ],
];

top_left = [
  ["",         "~" , "!" , "?" , "£" , "$" , "#" , "%" , "@" , "^" , "*"  , "_"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""   , ""             ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "{"  , "}"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ":" , ";"  , ""             ],
  [            ""  , ""                                                                    ],
  ["",         ""  , ""  , ""  ,                               "'" , ""   , ""   , ""      ],
];

top_right = [
  ["",         "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#"  , "#"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""   , ""             ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "("  , ")"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "<" , ">"  , ""             ],
  [            ""  , ""                                                                    ],
  ["",         ""  , ""  , ""  ,                               "|" , ""   , ""   , ""      ],
];

bottom_right = [
  ["",         "`" , "¬" , "×" , "÷" , "+" , "-" , "=" , "α" , "β" , "π"  , "Ω"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""   , ""             ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "⟨"  , "⟩"  , ""      ],
  ["",         ""  , ""  , ""  , ""  , ""  , ""  , ""  , ""  , "/" , "//" , ""             ],
  [            ""  , ""                                                                    ],
  ["",         ""  , ""  , ""  ,                               "|" , ""   , ""   , ""      ],
];

height_list = [
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1    , 1       ],
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1              ],
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1    , 2       ],
  [1,          .5  , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1              ],
  [            .5  , .5                                                                    ],
  [1,          1   , 1   , 1   ,                               1   , 1    , 1    , 1       ], 
];

width_list = [
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1    , 1       ],
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 2              ],
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1    , 1       ],
  [1,          .5  , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1    , 1              ],
  [            .5  , .5                                                                    ],
  [1,          1   , 1   , 6   ,                               1   , 1    , 1    , 1       ], 
];

posx_list = [
  [0,          1   , 2   , 3   , 4   , 5   , 5   , 6   , 7   , 8   , 9    , 10    , 11     ],
  [0,          1   , 2   , 3   , 4   , 5   , 5   , 6   , 7   , 8   , 9    , 10.5           ],
  [0,          1   , 2   , 3   , 4   , 5   , 5   , 6   , 7   , 8   , 9    , 10    , 11     ],
  [0,          1.25, 2   , 3   , 4   , 5   , 5   , 6   , 7   , 8   , 9    , 10    , 11     ],
  [            0.75   , 1.25                                                               ],
  [0,          1   , 2   , 4.5  ,                               8   , 9    , 10    , 11     ], 
];

posy_list = [
  [0,          0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0  , 0     , 0     , 0      ],
  [1,          1   , 1   , 1   , 1   , 1   , 1   , 1   , 1   , 1  , 1     , 1              ],
  [2,          2   , 2   , 2   , 2   , 2   , 2   , 2   , 2   , 2  , 2     , 2     , 2.5    ],
  [3,          2.75, 3   , 3   , 3   , 3   , 3   , 3   , 3   , 3  , 3     , 3              ],
  [            3.25, 3.25                                                                  ],
  [4,          4   , 4   , 4   ,                               4  , 4     , 4     , 4      ], 
];

$font_size = 4;
$font="DejaVu Sans Mono:style=Book";
$stem_type = "choc";
$support_type = "bars";
$stem_support_type = "disable";
// $stem_inset = -3;
$dish_type = "disable";
$inset_legend_depth = 2;

$rounded_key = true;
$minkowski_radius = 1.25;
$corner_radius = 0.5;

$key_height = 1.0;
$key_length = 1.0;
$total_depth = 11.5;


$bottom_key_width = 18.16;
$bottom_key_height = 18.16;
$width_difference = 0;
$height_difference = 0;

$top_tilt = 0;
$top_tilt_y = 0;
$top_skew = 0;
$top_skew_x = 0;

// 0_5uh() 0_5u()  key();
// translate_u(1,1) 1_25u() key();


for (y=[0:len(center)-1]) {
  for (x=[0:len(center[y])-1]) {
    translate_u(posx_list[y][x],-posy_list[y][x]) {
      legend(center[y][x], [0,0]) {
        legend(bottom_left[y][x], [-1,1], size=2) {
          legend(bottom_right[y][x], [1,1], size=2) {
            legend(top_left[y][x], [-1,-1], size=2) {
              legend(top_right[y][x], [1,-1], size=2) {
                u(width_list[y][x]) uh(height_list[y][x]) low_profile() key();
              }
            }
          }
        }
      }
    }
  }
}